name: Production deployment

on:
  workflow_dispatch:

env:
  # built from https://github.com/JusticeInternational/project-config/packages/290557?version=latest
  DOCKER_IMAGE_NAME: db
  IMAGE_REGISTRY_URL: docker.pkg.github.com
  AZ_IMAGE_REGISTRY_URL: redsol.azurecr.io
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
jobs:
  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: npm install and build webpack
  #       run: |
  #         npm install
  #         npm run build
  #     - uses: actions/upload-artifact@master
  #       with:
  #         name: webpack artifacts
  #         path: public/

  # Build-Docker-Image:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   name: Build image and store in GitHub Packages
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v1

  #     - name: Download built artifact
  #       uses: actions/download-artifact@master
  #       with:
  #         name: webpack artifacts
  #         path: public

  #     - name: create image and store in Packages
  #       uses: mattdavis0351/actions/docker-gpr@1.3.0
  #       with:
  #         repo-token: ${{secrets.GITHUB_TOKEN}}
  #         image-name: ${{env.DOCKER_IMAGE_NAME}}

  Deploy-to-Azure:
    runs-on: ubuntu-latest
    # needs: Build-Docker-Image
    name: Deploy app container to Azure
    steps:
      - name: Get Docker Repo Name
        id: get-repository
        run: |
          echo "::set-output name=docker-repo::$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]' )"
    
      - name: Login to GitHub Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{env.IMAGE_REGISTRY_URL}}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Azure Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{env.AZ_IMAGE_REGISTRY_URL}}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Publish Images to Azure
        run: |
          docker pull ${{ env.IMAGE_REGISTRY_URL}}/${{ steps.get-repository.outputs.docker-repo }}/${{ env.DOCKER_IMAGE_NAME }}:latest && \
          docker tag ${{ env.IMAGE_REGISTRY_URL}}/${{ steps.get-repository.outputs.docker-repo }}/${{ env.DOCKER_IMAGE_NAME }}:latest \
                     ${{ env.AZ_IMAGE_REGISTRY_URL }}/${{ env.DOCKER_IMAGE_NAME }}:latest && \
          docker push ${{ env.AZ_IMAGE_REGISTRY_URL }}/${{ env.DOCKER_IMAGE_NAME }}:latest
